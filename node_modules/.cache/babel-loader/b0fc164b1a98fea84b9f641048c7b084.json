{"remainingRequest":"C:\\sf\\vue\\todos\\node_modules\\babel-loader\\lib\\index.js!C:\\sf\\vue\\todos\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\sf\\vue\\todos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\sf\\vue\\todos\\src\\components\\Todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\sf\\vue\\todos\\src\\components\\Todos.vue","mtime":1583915045000},{"path":"C:\\sf\\vue\\todos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Todos',\n  data: function data() {\n    return {\n      todos: [],\n      addTodoForm: {\n        description: '',\n        is_completed: []\n      },\n      updateTodoForm: {\n        uid: 0,\n        description: '',\n        is_completed: []\n      },\n      // props: ['message'],\n      confirmationMessage: '',\n      showDismissibleAlert: false\n    };\n  },\n  methods: {\n    getTodos: function getTodos() {\n      // console.log(localStorage.getItem('todos'));\n      this.todos = JSON.parse(localStorage.getItem('todos'));\n      var itemQuantity = this.todos.length;\n      this.all_todos = itemQuantity;\n      var array = JSON.parse(localStorage.getItem('todos'));\n      var isTrue = array.filter(function (item) {\n        return item.is_completed === 'true';\n      });\n      this.done = isTrue.length;\n      this.undone = this.all_todos - this.done;\n    },\n    resetForm: function resetForm() {\n      this.addTodoForm.description = '';\n      this.addTodoForm.is_completed = [];\n      this.updateTodoForm.description = '';\n      this.updateTodoForm.is_completed = [];\n    },\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      this.$refs.addTodoModal.hide();\n      var requestData = {\n        description: this.addTodoForm.description,\n        is_completed: this.addTodoForm.is_completed[0]\n      };\n      var localStorageList = JSON.parse(localStorage.getItem('todos'));\n\n      if (localStorageList === undefined || !Array.isArray(localStorageList)) {\n        localStorageList = [];\n      }\n\n      localStorageList.push({\n        uid: new Date().getTime(),\n        description: this.addTodoForm.description,\n        is_completed: this.addTodoForm.is_completed[0]\n      });\n      localStorage.setItem('todos', JSON.stringify(localStorageList));\n      this.getTodos();\n      this.confirmationMessage = \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430 \\\"\".concat(requestData.description, \"\\\" \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\");\n      this.showDismissibleAlert = true;\n      this.resetForm();\n    },\n    onReset: function onReset(event) {\n      event.preventDefault();\n      this.$refs.addTodoModal.hide();\n      this.resetForm();\n    },\n    updateTodo: function updateTodo(todo) {\n      this.updateTodoForm = todo;\n    },\n    onUpdateSubmit: function onUpdateSubmit(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide(); // const requestData = {\n      //   description: this.updateTodoForm.description,\n      //   is_completed: this.updateTodoForm.is_completed[0],\n      // };\n      // console.log(this.updateTodoForm.uid);\n\n      var localStorageList = JSON.parse(localStorage.getItem('todos')); // console.log(localStorageList);\n\n      var newList = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = localStorageList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var obj = _step.value;\n\n          if (obj.uid === this.updateTodoForm.uid) {\n            newList.push({\n              uid: this.updateTodoForm.uid,\n              description: this.updateTodoForm.description,\n              is_completed: this.updateTodoForm.is_completed[0]\n            });\n          } else {\n            newList.push(obj);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      localStorage.setItem('todos', JSON.stringify(newList));\n      this.getTodos();\n      this.showDismissibleAlert = true;\n      this.confirmationMessage = 'Задача обновлена';\n    },\n    onUpdateReset: function onUpdateReset(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      this.resetForm();\n    },\n    deleteTodo: function deleteTodo(todo) {\n      // console.log(todo.uid);\n      var localStorageList = JSON.parse(localStorage.getItem('todos')); // console.log(localStorageList);\n\n      var newList = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = localStorageList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var element = _step2.value;\n\n          if (element.uid !== todo.uid) {\n            newList.push(element);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      localStorage.setItem('todos', JSON.stringify(newList));\n      this.getTodos();\n      this.showDismissibleAlert = true;\n      this.confirmationMessage = 'Задача удалена из списка';\n    }\n  },\n  created: function created() {\n    this.getTodos();\n  }\n};",{"version":3,"sources":["Todos.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"col-sm-10\">\n      <h1>Задачи</h1>\n      <div>\n        <b-alert v-model=\"showDismissibleAlert\" variant=\"success\"\n\n        dismissible>{{ confirmationMessage }}</b-alert>\n      </div>\n      <button type=\"button\"\n              id=\"task-add\"\n              class=\"btn btn-success btn-sm align-left d-block\"\n              v-b-modal.todo-modal>\n        Добавить задачу\n      </button>\n      <div>\n        <p >Всего задач: {{ all_todos }} &nbsp;\n          Выполнено {{ done }}\n        &nbsp; Не выполнено: {{ undone }}</p>\n      </div>\n      <table class=\"table table-dark table-stripped table-hover\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th>Uid</th>\n            <th>Описание</th>\n            <th>Выполнена?</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(todo, index) in todos\" :key=\"index\">\n            <td class=\"todo-uid\">{{ todo.uid }}</td>\n            <td>{{ todo.description }}</td>\n            <td>\n              <span v-if=\"todo.is_completed\">Выполнено</span>\n              <span v-else>Не выполнено</span>\n            </td>\n            <td>\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\"\n                        class=\"btn btn-secondary btn-sm\"\n                        v-b-modal.todo-update-modal\n                        @click=\"updateTodo(todo)\"\n                        >\n                    Обновить\n                </button>\n                &nbsp;\n                <button type=\"button\"\n                  class=\"btn btn-danger btn-sm\"\n                  @click=\"deleteTodo(todo)\">\n                    X\n                </button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <b-modal ref=\"addTodoModal\"\n      id=\"todo-modal\"\n      title=\"Добавить задачу\"\n      hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-description-group\"\n                  label=\"Описание:\"\n                  label-for=\"form-description-input\">\n          <b-form-input id=\"form-description-input\"\n                  type=\"text\"\n                  v-model=\"addTodoForm.description\"\n                  required\n                  placeholder=\"Завести задачу\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-complete-group\">\n          <b-form-checkbox-group v-model=\"addTodoForm.is_completed\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Задача выполнена?</b-form-checkbox>\n            </b-form-checkbox-group>\n        </b-form-group>\n        <b-button type=\"submit\" variant=\"primary\">Добавить</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n      </b-form>\n    </b-modal>\n    <b-modal ref=\"updateTodoModal\"\n            id=\"todo-update-modal\"\n            title=\"Update\"\n            hide-footer>\n      <b-form @submit=\"onUpdateSubmit\" @reset=\"onUpdateReset\" class=\"w-100\">\n        <b-form-group id=\"form-update-description-group\"\n                label=\"Описание:\"\n                label-for=\"form-update-description-input\">\n          <b-form-input id=\"form-update-description-input\"\n                  type=\"text\"\n                  v-model=\"updateTodoForm.description\"\n                  required>\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-update-complete-group\">\n          <b-form-checkbox-group v-model=\"updateTodoForm.is_completed\" id=\"form-update-checks\">\n            <b-form-checkbox value=\"true\">Задача выполнена?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Обновить</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n<style>\n  button#task-add {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  h1, td {\n    text-align: left;\n  }\n  .todo-uid {\n    text-align: right;\n  }\n</style>\n\n<script>\n\nexport default {\n  name: 'Todos',\n  data() {\n    return {\n      todos: [],\n      addTodoForm: {\n        description: '',\n        is_completed: [],\n      },\n      updateTodoForm: {\n        uid: 0,\n        description: '',\n        is_completed: [],\n      },\n      // props: ['message'],\n      confirmationMessage: '',\n      showDismissibleAlert: false,\n    };\n  },\n\n  methods: {\n    getTodos() {\n      // console.log(localStorage.getItem('todos'));\n      this.todos = JSON.parse(localStorage.getItem('todos'));\n      const itemQuantity = this.todos.length;\n      this.all_todos = itemQuantity;\n      const array = JSON.parse(localStorage.getItem('todos'));\n\n      const isTrue = array.filter(item => item.is_completed === 'true');\n\n      this.done = isTrue.length;\n      this.undone = this.all_todos - this.done;\n    },\n    resetForm() {\n      this.addTodoForm.description = '';\n      this.addTodoForm.is_completed = [];\n      this.updateTodoForm.description = '';\n      this.updateTodoForm.is_completed = [];\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      this.$refs.addTodoModal.hide();\n      const requestData = {\n        description: this.addTodoForm.description,\n        is_completed: this.addTodoForm.is_completed[0],\n      };\n\n      let localStorageList = JSON.parse(localStorage.getItem('todos'));\n      if (localStorageList === undefined || !Array.isArray(localStorageList)) {\n        localStorageList = [];\n      }\n\n      localStorageList.push({\n        uid: (new Date()).getTime(),\n        description: this.addTodoForm.description,\n        is_completed: this.addTodoForm.is_completed[0],\n\n      });\n      localStorage.setItem('todos', JSON.stringify(localStorageList));\n\n      this.getTodos();\n      this.confirmationMessage = `Задача \"${requestData.description}\" добавлена`;\n      this.showDismissibleAlert = true;\n      this.resetForm();\n    },\n    onReset(event) {\n      event.preventDefault();\n      this.$refs.addTodoModal.hide();\n      this.resetForm();\n    },\n    updateTodo(todo) {\n      this.updateTodoForm = todo;\n    },\n    onUpdateSubmit(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      // const requestData = {\n      //   description: this.updateTodoForm.description,\n      //   is_completed: this.updateTodoForm.is_completed[0],\n      // };\n\n      // console.log(this.updateTodoForm.uid);\n\n      const localStorageList = JSON.parse(localStorage.getItem('todos'));\n      // console.log(localStorageList);\n      const newList = [];\n      for (const obj of localStorageList) {\n        if (obj.uid === this.updateTodoForm.uid) {\n          newList.push({\n            uid: this.updateTodoForm.uid,\n            description: this.updateTodoForm.description,\n            is_completed: this.updateTodoForm.is_completed[0],\n          });\n        } else {\n          newList.push(obj);\n        }\n      }\n      localStorage.setItem('todos', JSON.stringify(newList));\n\n      this.getTodos();\n      this.showDismissibleAlert = true;\n      this.confirmationMessage = 'Задача обновлена';\n    },\n    onUpdateReset(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      this.resetForm();\n    },\n    deleteTodo(todo) {\n      // console.log(todo.uid);\n      const localStorageList = JSON.parse(localStorage.getItem('todos'));\n      // console.log(localStorageList);\n      const newList = [];\n      for (const element of localStorageList) {\n        if (element.uid !== todo.uid) {\n          newList.push(element);\n        }\n      }\n      localStorage.setItem('todos', JSON.stringify(newList));\n\n      this.getTodos();\n      this.showDismissibleAlert = true;\n      this.confirmationMessage = 'Задача удалена из списка';\n    },\n  },\n  created() {\n    this.getTodos();\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}