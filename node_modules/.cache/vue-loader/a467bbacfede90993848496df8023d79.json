{"remainingRequest":"C:\\sf\\vue\\todos\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\sf\\vue\\todos\\src\\components\\Todos.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\sf\\vue\\todos\\src\\components\\Todos.vue","mtime":1583915045000},{"path":"C:\\sf\\vue\\todos\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\sf\\vue\\todos\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbutton#task-add {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\nh1, td {\n  text-align: left;\n}\n.todo-uid {\n  text-align: right;\n}\n",{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"col-sm-10\">\n      <h1>Задачи</h1>\n      <div>\n        <b-alert v-model=\"showDismissibleAlert\" variant=\"success\"\n\n        dismissible>{{ confirmationMessage }}</b-alert>\n      </div>\n      <button type=\"button\"\n              id=\"task-add\"\n              class=\"btn btn-success btn-sm align-left d-block\"\n              v-b-modal.todo-modal>\n        Добавить задачу\n      </button>\n      <div>\n        <p >Всего задач: {{ all_todos }} &nbsp;\n          Выполнено {{ done }}\n        &nbsp; Не выполнено: {{ undone }}</p>\n      </div>\n      <table class=\"table table-dark table-stripped table-hover\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th>Uid</th>\n            <th>Описание</th>\n            <th>Выполнена?</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(todo, index) in todos\" :key=\"index\">\n            <td class=\"todo-uid\">{{ todo.uid }}</td>\n            <td>{{ todo.description }}</td>\n            <td>\n              <span v-if=\"todo.is_completed\">Выполнено</span>\n              <span v-else>Не выполнено</span>\n            </td>\n            <td>\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\"\n                        class=\"btn btn-secondary btn-sm\"\n                        v-b-modal.todo-update-modal\n                        @click=\"updateTodo(todo)\"\n                        >\n                    Обновить\n                </button>\n                &nbsp;\n                <button type=\"button\"\n                  class=\"btn btn-danger btn-sm\"\n                  @click=\"deleteTodo(todo)\">\n                    X\n                </button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <b-modal ref=\"addTodoModal\"\n      id=\"todo-modal\"\n      title=\"Добавить задачу\"\n      hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-description-group\"\n                  label=\"Описание:\"\n                  label-for=\"form-description-input\">\n          <b-form-input id=\"form-description-input\"\n                  type=\"text\"\n                  v-model=\"addTodoForm.description\"\n                  required\n                  placeholder=\"Завести задачу\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-complete-group\">\n          <b-form-checkbox-group v-model=\"addTodoForm.is_completed\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Задача выполнена?</b-form-checkbox>\n            </b-form-checkbox-group>\n        </b-form-group>\n        <b-button type=\"submit\" variant=\"primary\">Добавить</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n      </b-form>\n    </b-modal>\n    <b-modal ref=\"updateTodoModal\"\n            id=\"todo-update-modal\"\n            title=\"Update\"\n            hide-footer>\n      <b-form @submit=\"onUpdateSubmit\" @reset=\"onUpdateReset\" class=\"w-100\">\n        <b-form-group id=\"form-update-description-group\"\n                label=\"Описание:\"\n                label-for=\"form-update-description-input\">\n          <b-form-input id=\"form-update-description-input\"\n                  type=\"text\"\n                  v-model=\"updateTodoForm.description\"\n                  required>\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-update-complete-group\">\n          <b-form-checkbox-group v-model=\"updateTodoForm.is_completed\" id=\"form-update-checks\">\n            <b-form-checkbox value=\"true\">Задача выполнена?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Обновить</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n<style>\n  button#task-add {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  h1, td {\n    text-align: left;\n  }\n  .todo-uid {\n    text-align: right;\n  }\n</style>\n\n<script>\n\nexport default {\n  name: 'Todos',\n  data() {\n    return {\n      todos: [],\n      addTodoForm: {\n        description: '',\n        is_completed: [],\n      },\n      updateTodoForm: {\n        uid: 0,\n        description: '',\n        is_completed: [],\n      },\n      // props: ['message'],\n      confirmationMessage: '',\n      showDismissibleAlert: false,\n    };\n  },\n\n  methods: {\n    getTodos() {\n      // console.log(localStorage.getItem('todos'));\n      this.todos = JSON.parse(localStorage.getItem('todos'));\n      const itemQuantity = this.todos.length;\n      this.all_todos = itemQuantity;\n      const array = JSON.parse(localStorage.getItem('todos'));\n\n      const isTrue = array.filter(item => item.is_completed === 'true');\n\n      this.done = isTrue.length;\n      this.undone = this.all_todos - this.done;\n    },\n    resetForm() {\n      this.addTodoForm.description = '';\n      this.addTodoForm.is_completed = [];\n      this.updateTodoForm.description = '';\n      this.updateTodoForm.is_completed = [];\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      this.$refs.addTodoModal.hide();\n      const requestData = {\n        description: this.addTodoForm.description,\n        is_completed: this.addTodoForm.is_completed[0],\n      };\n\n      let localStorageList = JSON.parse(localStorage.getItem('todos'));\n      if (localStorageList === undefined || !Array.isArray(localStorageList)) {\n        localStorageList = [];\n      }\n\n      localStorageList.push({\n        uid: (new Date()).getTime(),\n        description: this.addTodoForm.description,\n        is_completed: this.addTodoForm.is_completed[0],\n\n      });\n      localStorage.setItem('todos', JSON.stringify(localStorageList));\n\n      this.getTodos();\n      this.confirmationMessage = `Задача \"${requestData.description}\" добавлена`;\n      this.showDismissibleAlert = true;\n      this.resetForm();\n    },\n    onReset(event) {\n      event.preventDefault();\n      this.$refs.addTodoModal.hide();\n      this.resetForm();\n    },\n    updateTodo(todo) {\n      this.updateTodoForm = todo;\n    },\n    onUpdateSubmit(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      // const requestData = {\n      //   description: this.updateTodoForm.description,\n      //   is_completed: this.updateTodoForm.is_completed[0],\n      // };\n\n      // console.log(this.updateTodoForm.uid);\n\n      const localStorageList = JSON.parse(localStorage.getItem('todos'));\n      // console.log(localStorageList);\n      const newList = [];\n      for (const obj of localStorageList) {\n        if (obj.uid === this.updateTodoForm.uid) {\n          newList.push({\n            uid: this.updateTodoForm.uid,\n            description: this.updateTodoForm.description,\n            is_completed: this.updateTodoForm.is_completed[0],\n          });\n        } else {\n          newList.push(obj);\n        }\n      }\n      localStorage.setItem('todos', JSON.stringify(newList));\n\n      this.getTodos();\n      this.showDismissibleAlert = true;\n      this.confirmationMessage = 'Задача обновлена';\n    },\n    onUpdateReset(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      this.resetForm();\n    },\n    deleteTodo(todo) {\n      // console.log(todo.uid);\n      const localStorageList = JSON.parse(localStorage.getItem('todos'));\n      // console.log(localStorageList);\n      const newList = [];\n      for (const element of localStorageList) {\n        if (element.uid !== todo.uid) {\n          newList.push(element);\n        }\n      }\n      localStorage.setItem('todos', JSON.stringify(newList));\n\n      this.getTodos();\n      this.showDismissibleAlert = true;\n      this.confirmationMessage = 'Задача удалена из списка';\n    },\n  },\n  created() {\n    this.getTodos();\n  },\n};\n</script>\n"]}]}